# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
        - name: Generate image tag
          run: |
            echo "IMAGE_TAG=$(date +%s)" >> $GITHUB_ENV
            
        - uses: actions/checkout@v4
        - name: Build and push Docker image
          run: |
            docker build --file ./Backend/Dockerfile --tag ghcr.io/sariandras43/slimfitgymbackend:$IMAGE_TAG --tag ghcr.io/sariandras43/slimfitgymbackend:latest ./Backend
            docker login ghcr.io -u sariandras43 -p ${{secrets.GHCR_TOKEN}}
            docker push ghcr.io/sariandras43/slimfitgymbackend:$IMAGE_TAG
            docker push ghcr.io/sariandras43/slimfitgymbackend:latest

        - name: Run tests
          run: |
            docker run --rm \
            -e CloudinarySettings__CloudName="${{ secrets.CLOUDINARY_CLOUDNAME }}" \
            -e CloudinarySettings__ApiKey="${{ secrets.CLOUDINARY_APIKEY }}" \
            -e CloudinarySettings__ApiSecret="${{ secrets.CLOUDINARY_APISECRET }}" \
            -v $(pwd)/Backend:/app \
            mcr.microsoft.com/dotnet/sdk:8.0 \
            /bin/bash -c "dotnet build /app/SlimFitGym.Tests/SlimFitGym.Tests.csproj --configuration Debug && \
                          dotnet test /app/SlimFitGym.Tests/SlimFitGym.Tests.csproj --configuration Debug --logger 'trx' --verbosity detailed"
                
        - name: Deploy to Azure Web App
          id: deploy-to-webapp
          uses: azure/webapps-deploy@v2
          with:
            app-name: 'SlimFitGymBackend'
            slot-name: 'production'
            publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_0469E21E3B97450491DC70230A8D7FF2 }}
            images: ghcr.io/sariandras43/slimfitgymbackend:latest

