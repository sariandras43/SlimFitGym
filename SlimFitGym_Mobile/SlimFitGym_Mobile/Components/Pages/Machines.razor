@inject NavigationManager NavigationManager
@using SlimFitGym_Mobile.Models
@using SlimFitGym_Mobile.Services
@page "/machines"

<Header />

<div class="container mt-2 d-flex flex-column">
    <div class="sticky-top py-3">
        <h2 class="text-center fw-bold">Gépeink</h2>

        <div class="mb-3">
            <input type="text" class="form-control border-secondary" placeholder="Keresés" @bind="searchText" @bind:event="oninput" />
        </div>
    </div>
    @if (!filteredMachines.Any())
    {
        <p class="text-muted text-center">Nincs találat.</p>
    }
    else
    {
    <div id="machinesList" class="overflow-auto flex-grow-1">
        <div class="row row-cols-2 g-4">
            @foreach (var machine in filteredMachines)
            {
                var machineUrl = $"/machineDetails/{machine.Id}";

                <div class="col d-flex justify-content-center">
                        <NavLink href="/machineDetails" class="card border rounded shadow-sm text-decoration-none w-100">
                            <div class="card-body text-center p-2 lighter-dark">
                            <img src="#" class="w-50 h-75" alt="Alternate Text" />
                            <p class="fw-bold text-dark mb-0 lighter-dark">@machine.Name</p>
                        </div>
                    </NavLink>
                </div>
            }
        </div>
    </div>
    }
</div>

<Navbar/>

@code {
    private List<MachineModel> machines = MachineModel.GetMachines();
    // private List<MachineModel>? machines= new List<MachineModel>();
    // protected override async Task OnInitializedAsync()
    // {
    //     machines = await DataService.GetMachines();
    // }
    
    private string searchText = string.Empty;
    private List<MachineModel> filteredMachines => machines
        .Where(m => m.Name.Contains(searchText, StringComparison.OrdinalIgnoreCase))
        .ToList();

}
