@inherits LayoutComponentBase
@using SlimFitGym_Mobile.Models
@using SlimFitGym_Mobile.Services
@inject CameraService CameraService
@inject IJSRuntime JS
@page "/"

<div class="d-flex flex-column min-vh-100">
    <Header />
    <div class="flex-grow-1 position-relative">
        @if (AccountModel.LoggedInUser != null)
        {
            <!-- Logged in content -->
            <div class="d-flex justify-content-center">
                <div class="d-flex justify-content-center">
                    <img class="w-50" src="icon.png" alt="Logo" />
                </div>
            </div>
            <div class="container mt-4 carousel-container">
                @if (AccountModel.LoggedInUser?.Role != "trainer")
                {
                    @if (validPasses.Any())
                    {
                        <h3 class="section-title">Érvényes bérleteid</h3>
                        <div id="plansCarousel" class="carousel slide lighter-dark" data-bs-touch="true" data-bs-interval="false">
                            <div class="carousel-inner lighter-dark rounded">
                                @for (int i = 0; i < validPasses.Count; i++)
                                {
                                    <div class="carousel-item @(i == 0 ? "active" : "")">
                                        <div class="card home-card lighter-dark">
                                            <div class="card-body lighter-dark">
                                                <h5 class="card-title lighter-dark">@validPasses[i].Name</h5>
                                                <p class="card-text lighter-dark">🎟 Hátralévő belépések: <b>@validPasses[i].MaxEntries</b></p>
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    }
                }



                @if (trainings.Any())
                {
                    <h3 class="section-title mt-4">Edzéseid</h3>
                    <div id="trainingsCarousel" class="carousel slide lighter-dark" data-bs-touch="true" data-bs-interval="false">
                        <div class="carousel-inner lighter-dark rounded">
                            @for (int i = 0; i < trainings.Count; i++)
                            {
                                <div class="carousel-item @(i == 0 ? "active" : "")">
                                    <div class="card home-card lighter-dark">
                                        <div class="card-body lighter-dark">
                                            <h5 class="card-title lighter-dark">@trainings[i].Name</h5>
                                            <p class="card-text lighter-dark">📅 Dátum: <b>@trainings[i].TrainingStart.ToString("yyyy.MM.dd HH:mm")</b></p>
                                            <p class="card-text lighter-dark">🏋️ Edző: <b>@trainings[i].TrainerId</b></p>
                                            <p class="card-text lighter-dark">📍 Helyszín: <b>@trainings[i].RoomId</b></p>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                }
            </div>
        }
        else
        {
            <div class="h-100 d-flex justify-content-center align-items-center">
                <img class="w-50" src="icon.png" alt="Logo" />
            </div>
        }
    </div>
    <Navbar />
</div>

@code {
    // private List<PassModel> validPasses;
    // private List<TrainingModel> signedUpTrainings;

    // protected override async Task OnInitializedAsync()
    // {
    //     validPasses = await DataService.GetAccountsPasses(AccountModel.LoggedInUser.Id);
    //     signedUpTrainings = await DataService.GetSignedUpTrainings(AccountModel.LoggedInUser.Id);
    // }

    private List<PassModel> validPasses = PassModel.GetPasses();
    private List<TrainingModel> trainings = TrainingModel.GetTrainings();

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JS.InvokeVoidAsync("initializeCarousels");
        }
    }
}


